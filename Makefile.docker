# Requires (on Ubuntu):
#  - apt:docker-compose-v2
#  - apt:docker-buildx


.PHONY: \
	docker-build                                   \
	docker-guard-DB_VIRTUOSO_PATH                  \
	docker-compose-up docker-compose-down          \
	docker-compose-logs                            \
	docker-compose-exec-db-virtuoso                \
	docker-compose-exec-db-virtuoso-load-rdf-data  \
	docker-compose-exec-db-virtuoso-isql-load-list #

DOCKER_COMPOSE_CONFIG_FILES := docker-compose.yml docker-graph-volumes.json
DOCKER_COMPOSE_CONFIG_ARGS  := $(foreach F,$(DOCKER_COMPOSE_CONFIG_FILES),-f $F)

define DOCKER_MESSAGE

# Docker

## Build

  - docker-build        : build Docker image

## Docker Compose

### Service

  - docker-compose-up   : start Docker Compose (in background)
  - docker-compose-down : stop Docker Compose
  - docker-compose-logs : show logs of Docker Compose

### Exec

  - docker-compose-exec-db-virtuoso                 : start bash inside of `db-virtuoso`
  - docker-compose-exec-db-virtuoso-load-rdf-data   : load RDF data from `/data` mount
  - docker-compose-exec-db-virtuoso-isql-load-list  : show the current load list (status of loading)

# Variables

  - DB_VIRTUOSO_PATH  : directory for top-level of database storage (required for docker targets)

    (set to: ${DB_VIRTUOSO_PATH})

endef

MESSAGE += $(DOCKER_MESSAGE)

docker-graph-volumes.json: graphs.yaml
	cpanel_json_xs -f yaml < graphs.yaml  \
		| jq 'map(.path)|.[]'  \
		| sort \
		| xargs ./bin/docker-rec-file-mapper /data \
		| jq '{ services: { "db-virtuoso": { "volumes": . } } }' \
		| sponge docker-graph-volumes.json

docker-build:
	docker buildx bake -f docker-bake.hcl

docker-test:
	docker buildx bake -f docker-bake.hcl --progress plain db-virtuoso-deploy-tester

docker-guard-DB_VIRTUOSO_PATH:
ifeq (${DB_VIRTUOSO_PATH},)
	$(error Environment variable DB_VIRTUOSO_PATH is not set)
endif

docker-compose-up: docker-guard-DB_VIRTUOSO_PATH docker-build $(DOCKER_COMPOSE_CONFIG_FILES)
	[ -n "${DB_VIRTUOSO_PATH}" ] || ( echo "Must set DB_VIRTUOSO_PATH" && exit 1 )
	[ -f "${DB_VIRTUOSO_PATH}/database/virtuoso.ini" ] || $(ECHO) -n '' > "${ROOT_DIR}/db-virtuoso/initdb.d/11-load-datasets.output.sql"
	$(MKDIR_P) "${DB_VIRTUOSO_PATH}/database"
	$(MKDIR_P) "${DB_VIRTUOSO_PATH}/data"
	docker compose \
		$(DOCKER_COMPOSE_CONFIG_ARGS) \
		up -d

docker-compose-down: docker-guard-DB_VIRTUOSO_PATH $(DOCKER_COMPOSE_CONFIG_FILES)
	docker compose \
		$(DOCKER_COMPOSE_CONFIG_ARGS) \
		down

docker-compose-logs: docker-guard-DB_VIRTUOSO_PATH $(DOCKER_COMPOSE_CONFIG_FILES)
	docker compose \
		$(DOCKER_COMPOSE_CONFIG_ARGS) \
		logs -f

docker-compose-exec-db-virtuoso: docker-guard-DB_VIRTUOSO_PATH $(DOCKER_COMPOSE_CONFIG_FILES)
	docker compose \
		$(DOCKER_COMPOSE_CONFIG_ARGS) \
		exec db-virtuoso bash

docker-compose-exec-db-virtuoso-load-rdf-data-noninteractive: docker-guard-DB_VIRTUOSO_PATH $(DOCKER_COMPOSE_CONFIG_FILES)
	docker compose \
		$(DOCKER_COMPOSE_CONFIG_ARGS) \
		exec db-virtuoso bash -c '/script/load-rdf-dir /data > /tmp/load-rdf-dir.sql; isql "exec=LOAD /tmp/load-rdf-dir.sql"'

docker-compose-exec-db-virtuoso-load-rdf-data: docker-guard-DB_VIRTUOSO_PATH $(DOCKER_COMPOSE_CONFIG_FILES)
	docker compose \
		$(DOCKER_COMPOSE_CONFIG_ARGS) \
		exec --tty --interactive db-virtuoso bash -ic '/script/load-rdf-dir /data'

docker-compose-exec-db-virtuoso-isql-load-list: docker-guard-DB_VIRTUOSO_PATH $(DOCKER_COMPOSE_CONFIG_FILES)
	docker compose \
		$(DOCKER_COMPOSE_CONFIG_ARGS) \
		exec db-virtuoso isql 'exec=SELECT * FROM DB.DBA.load_list;'

clean::
	$(RM) docker-graph-volumes.json
