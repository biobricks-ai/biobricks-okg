## DO NOT EDIT DIRECTLY
##
## Generated from <fuseki_config.ttl.tt2>.
##
## Basic Fuseki configuration file for HDT files.
##
## Remember that you need hdt-java.jar and hdt-jena.jar when you launch Fuseki.
##

[% BLOCK hdtgraph -%]
[%- DEFAULT nameFilter='.' -%]
[% FOREACH item = dir.list -%]
   [% IF item.isdir %]
      [%- item.scan -%]
      [%- INCLUDE hdtgraph dir=item -%]
   [% ELSIF item.ext == 'hdt' AND item.name.match(nameFilter) %]
ja:namedGraph [
  ja:graphName <[% graphName %]?file=[% item.path %]>;
  ja:graph [
    a hdt:HDTGraph ;
    hdt:fileName """[% item.path %]"""
  ]
] ;
   [%- END -%]
[% END -%]
[% END %]

[%- BLOCK graphFromFile -%]
[%- input = INSERT "$file" -%]
[%- input.trim -%]
[%- END -%]

@prefix :        <#> .
@prefix fuseki:  <http://jena.apache.org/fuseki#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix tdb:     <http://jena.hpl.hp.com/2008/tdb#> .
@prefix ja:      <http://jena.hpl.hp.com/2005/11/Assembler#> .
@prefix hdt:      <http://www.rdfhdt.org/fuseki#> .

[] rdf:type fuseki:Server ;
   # Timeout - server-wide default: milliseconds.
   # Format 1: "1000" -- 1 second timeout
   # Format 2: "10000,60000" -- 10s timeout to first result, then 60s timeout for the rest of query.
   # See java doc for ARQ.queryTimeout
   # ja:context [ ja:cxtName "arq:queryTimeout" ;  ja:cxtValue "10000" ] ;

   # IMPORTANT: Import the HDT Assembler
   ja:loadClass "org.rdfhdt.hdtjena.HDTGraphAssembler" ;

   fuseki:services (
     <#service1>
   ) .

# HDT Classes
hdt:HDTGraph rdfs:subClassOf ja:Graph .

## ---------------------------------------------------------------
## Create a Read-Only Dataset composed by many RDF Graphs, each from an HDT File.

<#service1> rdf:type fuseki:Service ;
    fuseki:name                     "hdtservice" ;
    fuseki:serviceQuery             "query" ;
    fuseki:serviceReadGraphStore    "get" ;
    fuseki:dataset                   <#dataset> ;
    .

<#dataset> rdf:type ja:RDFDataset ;
    rdfs:label "Dataset" ;

    # MeSH {{{
[% USE mesh_path = Directory('data-source/mesh-kg') %]
[% INCLUDE hdtgraph graphName="https://nlmpubs.nlm.nih.gov/projects/mesh/rdf/mesh.nt.gz" dir=mesh_path FILTER indent(4) %]
    # }}}

    # UniProt {{{
    # $ find -L data-source/uniprot-kg/ -type f -name '*.hdt' | parallel --bar 'hdtSearch -q 0 {}'
[% USE uniprot_path = Directory('data-source/uniprot-kg') %]
[% INCLUDE hdtgraph graphName="https://www.uniprot.org/" dir=uniprot_path FILTER indent(4) %]
    # }}}

[% USE brick_path = Directory('brick/') %]
    # ICE {{{
[% ice_graphName = INCLUDE graphFromFile file="stages/ice.graph" %]
[% INCLUDE hdtgraph graphName=ice_graphName dir=brick_path nameFilter='ice' FILTER indent(4) %]
    # }}}

    # ToxCast {{{
[% toxcast_graphName = INCLUDE graphFromFile file="stages/toxcast.graph" %]
[% INCLUDE hdtgraph graphName=toxcast_graphName dir=brick_path nameFilter='toxcast' FILTER indent(4) %]
    # }}}

    .
