---
title: Exploration of ICE data via SPARQL
author: Zaki Mughal
date: 2024-02-21
format:
  html:
    embed-resources: true
---

```{r, setup, include=FALSE}
if (!require("pacman")) install.packages("pacman")
pacman::p_load(here, remotes, dplyr, stringr, readr, reshape2, ggplot2, ComplexUpset)

if (!require("SPARQL")) remotes::install_github('cran/SPARQL')
pacman::p_load(SPARQL)

setwd( here::here() )
knitr::opts_knit$set(
    root.dir = here::here()
)
Sys.setenv(HERE=here::here())
```


```{r, db-fuseki, engine='bash', include=FALSE}
cd $HERE
make db-fuseki-up
```

# Assay by Dataset

## SPARQL query

Set up preliminaries and define query:

```{r, sparql-endpoint}
# Define the endpoint
if(!exists('endpoint')) endpoint <- 'http://localhost:8080/hdtservice/'
```

```{r, sparql-query}
# create query statement
query <- read_file('report/2024-02-23/invitrodb-toxcast-vs-ice-graph.rq')
cat( query )
```

## Process results

Use SPARQL package to submit query and save results to a data frame
```{r, retrieve-data}
qd <- SPARQL(endpoint,query)
df <- qd$results

# Step 3 - Prep for graphing
recode_map <- tribble(
	~iri,                                                           ~dataset,
	"<https://ice.ntp.niehs.nih.gov/>",                             'ice',
	"<https://www.epa.gov/chemical-research/toxicity-forecasting>", 'toxcast'
) |> pull(dataset, name = iri )

df <- df |>
	# remove "?file=" parameter suffix
	mutate( graph = str_replace(graph, r'(\?file=.*>$)', '>' ) ) |>
	# to factor
	mutate(across(c(graph), as.factor)) |>
	# rename graph IRIs to simple names
	mutate(graph = recode(graph, !!! recode_map )) |>
	# one-hot encoding by graph name
	dcast(assay ~ graph, value.var = 'graph', length )
str(df)
```

## Plot

```{r, dataset-assay-intersect}
upset(df, recode_map)
```

# Chemical by Dataset

```{r}
query <- read_file('report/2024-02-23/chemical-by-database.rq')
cat( query )

df <- SPARQL(endpoint,query)$results

str(df)
```

## Assay, chemical, MOA


```{r}
query <- read_file('report/2024-02-23/assay-chemical-moa-specific.rq')
cat( query )

df <- SPARQL(endpoint,query)$results

df
```

```{r}
arrow::read_parquet( biobricks::bbassets("ice")$cHTS2022_invitrodb34_20220302_parquet) |>
	subset( DTXSID == "DTXSID0022436" & Assay == "ACEA_ER_80hr", c(DTXSID, Assay, ChemicalName, Endpoint, Response, ResponseUnit) )
```

## Session Info
```{r, session-info, echo = FALSE}
sessionInfo()
```
